name: CI
on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches:
      - '**'
  schedule:
    - cron: '0 0 * * 0'
jobs:

  docker-build:
    name: Docker Build
    runs-on: ubuntu-16.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Push to Docker Hub
        uses: docker/build-push-action@v1
        with:
          push: true
          tags: "mmore500/conduit:GITHUB_ACTION_${GITHUB_ACTION}"
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: mmore500/dishtiny
          tag_with_ref: true

  tidy:
    name: Docs, Miscellaneous
    runs-on: ubuntu-16.04
    needs:
      - docker-build
    steps:
      - uses: docker-practice/actions-setup-docker@v1
      - run: docker run "mmore500/conduit:GITHUB_ACTION_${GITHUB_ACTION}" /bin/bash -c "cd /opt/conduit && ./ci/test_tidy.sh"


  unit:
    name: Unit Tests
    runs-on: ubuntu-16.04
    needs:
      - docker-build
    strategy:
      matrix:
        mpicxx: [mpich, openmpi]
        mode: [ Debug, Opt ]
    steps:
      - uses: docker-practice/actions-setup-docker@v1
      - run: docker run "mmore500/conduit:GITHUB_ACTION_${GITHUB_ACTION}" /bin/bash -c \
        "cd /opt/conduit/tests/ && \
        cmake -S . -B build -GNinja -DCMAKE_BUILD_TYPE=${{ matrix.mode }} -DMPI_EXECUTABLE_SUFFIX=${{ matrix.mpicxx }} && \
        cmake --build build && \
        cd build && \
        ctest"

  coverage:
    name: Coverage
    runs-on: ubuntu-16.04
    needs:
      - docker-build
    env:
      DISH_MPICXX: mpicxx.openmpi
      OMPI_CXX: clang++
    steps:
      - uses: docker-practice/actions-setup-docker@v1
      - run: export ci_env=`bash <(curl -s https://codecov.io/env)`
      - run: docker run $ci_env -e DISH_MPICXX -e OMPI_CXX "mmore500/conduit:TRAVIS_BUILD_${TRAVIS_BUILD_NUMBER}" /bin/bash -c "cd /opt/condit/tests && make cov && bash <(curl -s https://codecov.io/bash)"

  microbenchmarks:
    name: Microbenchmarks
    runs-on: ubuntu-16.04
    needs:
      - docker-build
    steps:
      - uses: docker-practice/actions-setup-docker@v1
      - run: docker run -e OSF_USERNAME=$OSF_USERNAME -e OSF_PASSWORD=$OSF_USERNAME -e CONTEXT=actions "mmore500/conduit:GITHUB_ACTION_${GITHUB_ACTION}" /bin/bash -c "cd /opt/dishtiny/microbenchmarks && make"

  macrobenchmarks:
    name: Macrobenchmarks
    runs-on: ubuntu-16.04
    needs:
      - docker-build
    steps:
      - uses: docker-practice/actions-setup-docker@v1
      - run: docker run -e OSF_USERNAME=$OSF_USERNAME -e OSF_PASSWORD=$OSF_USERNAME -e CONTEXT=actions "mmore500/conduit:GITHUB_ACTION_${GITHUB_ACTION}" /bin/bash -c "cd /opt/dishtiny/macrobenchmarks && make"

  docs:
    name: Source, Docs, Demos
    runs-on: ubuntu-16.04
    needs:
      - docker-build
    steps:
      - uses: docker-practice/actions-setup-docker@v1
      - run: docker run --cap-add=SYS_ADMIN "mmore500/conduit:GITHUB_ACTION_${GITHUB_ACTION}" /bin/bash -c "cd /opt/conduit && make test-source && make docs && make demos"

  deploy-pages:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-16.04
    if: github.ref == 'refs/heads/master'
    needs:
      - docs
      - unit
      - source
      - coverage
      - fuzzing
      - microbenchmarks
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - run:
        |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          echo $(cd third-party && ./install_emsdk.sh)
      - run: make web
      - run:
        |
          cd web
          git init
          git remote add origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/devosoft/empirical-prefab-demo.git > /dev/null 2>&1
          git checkout -b gh-pages
          git add .
          git commit --message "GitHub Action ${GITHUB_ACTION}"
          git push --force --quiet origin gh-pages

  deploy-dockerhub:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-16.04
    if: github.ref == 'refs/heads/master'
    needs:
      - docs
      - unit
      - source
      - coverage
      - fuzzing
      - microbenchmarks

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Push to Docker Hub
        uses: docker/build-push-action@v1
        with:
          push: true
          tags: "mmore500/conduit:latest"
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: mmore500/dishtiny
          tag_with_ref: true
